[tox]
min_version = 4.22

envlist =
    py{39,310,311}-dj42-wagtail{52,63}
    py{310,311}-dj50-wagtail{52,62,63}
    py{312,313}-dj51-wagtail63

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313

[testenv]
package = editable
pass_env =
    FORCE_COLOR
    NO_COLOR

setenv =
    PYTHONPATH = {toxinidir}
    DJANGO_SETTINGS_MODULE = tests.testapp.settings
    PYTHONDEVMODE = 1
    # use the Python 3.12+ sys.monitoring
    py3.12: COVERAGE_CORE=sysmon
    py3.13: COVERAGE_CORE=sysmon

extras = testing

deps =
    django4.2: Django>=4.2,<5.0
    django5.0: Django>=5.0,<5.1
    django5.1: Django>=5.1,<5.2

    wagtail5.2: wagtail>=5.2,<5.3
    wagtail6.2: wagtail>=6.2,<6.3
    wagtail6.3: wagtail>=6.3,<6.4

install_command = python -m pip install -U {opts} {packages}
commands =
    python -m coverage run {toxinidir}/tests/manage.py test {posargs: -v 2}

[testenv:coverage-report]
base_python = python3.13
package = skip
deps =
    coverage>=7.0,<8.0
commands =
    python -Im coverage combine
    python -Im coverage report -m

[testenv:wagtailmain]
description = Test with latest Wagtail main branch
base_python = python3.13
deps =
    coverage>=7.0,<8.0
    wagtailmain: git+https://github.com/wagtail/wagtail.git@main#egg=Wagtail

[testenv:interactive]
description = An interactive environment for local testing purposes
base_python = python3.13

; Note: the following are commented out for development convenience,
;       so as to test the interactive mode with a different Wagtail version
; deps =
;     wagtail>=5.2,<6.0

commands_pre =
    python {toxinidir}/tests/manage.py makemigrations --settings=testapp.settings
    python {toxinidir}/tests/manage.py migrate --settings=testapp.settings
    python {toxinidir}/tests/manage.py shell -c "from django.contrib.auth.models import User;(not User.objects.filter(username='admin').exists()) and User.objects.create_superuser('admin', 'super@example.com', 'changeme')" --settings=testapp.settings
    python {toxinidir}/tests/manage.py createcachetable --settings=testapp.settings

commands =
    {posargs:python {toxinidir}/tests/manage.py runserver 0.0.0.0:8020 --settings=testapp.settings}

setenv =
    INTERACTIVE = 1
