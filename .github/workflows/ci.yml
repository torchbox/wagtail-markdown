name: CI

on:
  push:
    branches: [master]
    tags: v[0-9]+.[0-9]+.[0-9]+
  pull_request:
    branches: [master]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - uses: pre-commit/action@v2.0.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

#  test:
#    runs-on: ubuntu-latest
#    needs: lint
#    continue-on-error: ${{ matrix.experimental }}
#    strategy:
#      matrix:
#        include:
#          - python: "3.6"
#            django: "Django>=2.2,<2.3"
#            wagtail: "wagtail>=2.10,<2.11"
#            experimental: false
#          - python: "3.7"
#            django: "Django>=3.0,<3.1"
#            wagtail: "wagtail>=2.11,<2.14"
#            experimental: false
#          - python: "3.8"
#            django: "Django>=3.1,<3.2"
#            wagtail: "wagtail>=2.11,<2.14"
#            experimental: false
#          - python: "3.9"
#            django: "Django>=3.1,<3.2"
#            wagtail: "wagtail>=2.11,<2.14"
#            experimental: false
#          - python: "3.9"
#            django: "Django>=3.1,<3.3"
#            wagtail: "git+https://github.com/wagtail/wagtail.git@main#egg=wagtail"
#            experimental: true
#    services:
#      postgres:
#        image: postgres:13
#        ports:
#          - 5432:5432
#        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python ${{ matrix.python }}
#        uses: actions/setup-python@v2
#        with:
#          python-version: ${{ matrix.python }}
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install "psycopg2>=2.6"
#          pip install "${{ matrix.django }}"
#          pip install "${{ matrix.wagtail }}"
#          pip install -e .[testing]
#      - name: Test
#        run: python runtests.py
#        env:
#          DATABASE_ENGINE: django.db.backends.postgresql
#          DATABASE_HOST: localhost
#          DATABASE_USER: postgres
#          DATABASE_PASS: postgres

  build_and_publish:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: pip install wheel
      - name: Build
        run: python setup.py sdist bdist_wheel
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
